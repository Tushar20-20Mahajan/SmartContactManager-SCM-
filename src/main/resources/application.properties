spring.application.name=tusharSCM

server.port= 8081

# MySQL database configuration
# Datasource URL
spring.datasource.url = jdbc:mysql://localhost:3306/tusharscm
spring.datasource.username=root
spring.datasource.password=Mahajan2002tushar@

# JPA Configuration
# Show SQL queries in the logs (console)
spring.jpa.show-sql=true

spring.jpa.generate-ddl=true
# Creating the schema and tables: update because -> update the schema if necessary 
spring.jpa.hibernate.ddl-auto=update
# Dialect is not auto-configure for MySQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# Format is necessary to read SQL good
spring.jpa.properties.hibernate.format_sql=true

# Email configuration

# Security configuration 
# spring.security.user.name=tushar
# spring.security.user.password=tushar

# Logger
# logging.level.org.springframework=DEBUG
# logging.level.org.hibernate=DEBUG

# OAuth2 Client configuration
#  Make .env File and mention client id and key there 
# GOOGLE_CLIENT_ID=your_google_client_id
# GOOGLE_CLIENT_SECRET=your_google_client_secret

# Google configuration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile

# GitHub configuration
spring.security.oauth2.client.registration.github.client-name=github
spring.security.oauth2.client.registration.github.client-id=${GIT_HUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GIT_HUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=email,profile
